{"version":3,"sources":["Components/Navbar.js","Components/Page1.js","Components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","style","height","width","cursor","mode","htmlFor","Page1","useState","text","setText","color","for","value","onChange","event","console","log","target","backgroundColor","rows","NewText","toUpperCase","showAlert","toLowerCase","split","join","navigator","clipboard","writeText","filter","element","length","Alert","alert","role","msg","App","setMode","setAlert","message","setTimeout","cls","document","body","classList","remove","add","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bc17e30c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-dark bg-dark text-light`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand mx-4\" to=\"#\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active mx-4\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div className=\"d-flex\">\r\n              {/* <div\r\n                className=\"bg-primary rounded mx-2\"\r\n                onClick={() => {\r\n                  props.toggleMode(\"primary\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div> */}\r\n              <div\r\n                className=\"bg-danger rounded mx-2\"\r\n                onClick={() => {\r\n                  props.toggleMode(\"danger\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-success rounded mx-2\"\r\n                onClick={() => {\r\n                  props.toggleMode(\"success\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              <div\r\n                className=\"bg-warning rounded mx-2\"\r\n                onClick={() => {\r\n                  props.toggleMode(\"warning\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div>\r\n              {/* <div\r\n                className=\"bg-dark rounded mx-2\"\r\n                onClick={() => {\r\n                  props.toggleMode(\"dark\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div> */}\r\n              {/* <div\r\n                className=\"bg-light rounded mx-2\"\r\n                onClick={() => {\r\n                  props.toggleMode(\"light\");\r\n                }}\r\n                style={{ height: \"30px\", width: \"30px\", cursor: \"pointer\" }}\r\n              ></div> */}\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={() => {\r\n                props.toggleMode(null);\r\n              }}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark Mode Enabled\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nexport default function Page1(props) {\r\n  const [text, setText] = useState(\"Enter Text Here\");\r\n\r\n  const Uppercase = () => {\r\n    console.log(\"Uppercase Clicked\");\r\n    let NewText = text.toUpperCase();\r\n    setText(NewText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"Success\");\r\n  };\r\n\r\n  const Lowercase = () => {\r\n    console.log(\"LowerCase Clicked\");\r\n    let NewText = text.toLowerCase();\r\n    setText(NewText);\r\n    props.showAlert(\"Converted to Lowercase\", \"Success\");\r\n  };\r\n\r\n  const Copytext = () => {\r\n    console.log(\"CopyText Clicked\");\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text Copied\", \"Success\");\r\n  };\r\n\r\n  const ExtraSpaces = () => {\r\n    console.log(\"ExtraSpaces Clicked\");\r\n    let NewText = text.split(/[ ]+/);\r\n    setText(NewText.join(\" \"));\r\n    props.showAlert(\"Remove Extra Spaces\", \"Success\");\r\n  };\r\n\r\n  const Cleartext = () => {\r\n    console.log(\"Cleartext Clicked\");\r\n    let NewText = \"\";\r\n    setText(NewText);\r\n    props.showAlert(\"Text Cleared\", \"Success\");\r\n  };\r\n\r\n  const HandleOnChange = (event) => {\r\n    console.log(\"Uppercase Clicked\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#42743\" }}\r\n      >\r\n        <div className=\"mb-2\">\r\n          <label for=\"exampleFormControlTextarea1 text-center\" className=\"form-label\">\r\n            <strong className=\"text-center mx-2\">Textarea:</strong>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={HandleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#13466e\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#42743\",\r\n            }}\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n          <button className=\"btn btn-primary my-3 mx-2\" onClick={Uppercase}>\r\n            Convert to Uppercase\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-2\" onClick={Lowercase}>\r\n            Convert to Lowercase\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-2\" onClick={ExtraSpaces}>\r\n            Remove Exatra Spaces\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-2\" onClick={Copytext}>\r\n            Copy Texts\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-2\" onClick={Cleartext}>\r\n            Clear Texts\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#42743\" }}\r\n      >\r\n        <strong>\r\n          <h4>Text Summary</h4>\r\n        </strong>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          Words and {text.length} Characters\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-warning alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import Navbar from \"../src/Components/Navbar.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Page1 from \"./Components/Page1\";\nimport Alert from \"./Components/Alert\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove(\"bg-light\");\n    document.body.classList.remove(\"bg-dark\");\n    document.body.classList.remove(\"bg-warning\");\n    document.body.classList.remove(\"bg-danger\");\n    document.body.classList.remove(\"bg-success\");\n  };\n\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    document.body.classList.add(\"bg-\" + cls);\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode Enabled\", \"Success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"Success\");\n    }\n  };\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar\n          title=\"Text Converter\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Page1 mode={mode} showAlert={showAlert} />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}